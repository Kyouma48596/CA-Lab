$date
	Thu Mar 03 16:01:06 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_test $end
$var wire 32 ! read_data_2 [31:0] $end
$var wire 32 " read_data_1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ read_reg_num_1 [4:0] $end
$var reg 5 % read_reg_num_2 [4:0] $end
$var reg 1 & rst $end
$var reg 1 ' writeReg $end
$var reg 32 ( write_data [31:0] $end
$var reg 5 ) write_reg_num [4:0] $end
$var integer 32 * i [31:0] $end
$scope module DUT $end
$var wire 1 # clk $end
$var wire 32 + read_data_1 [31:0] $end
$var wire 32 , read_data_2 [31:0] $end
$var wire 5 - read_reg_num_1 [4:0] $end
$var wire 5 . read_reg_num_2 [4:0] $end
$var wire 1 & rst $end
$var wire 1 ' writeReg $end
$var wire 32 / write_data [31:0] $end
$var wire 5 0 write_reg_num [4:0] $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
b0 *
bx )
bx (
0'
1&
bx %
bx $
0#
bx "
bx !
$end
#1
b100000 1
0&
#3
1&
#5
1#
#10
0#
b0 !
b0 ,
b0 %
b0 .
b0 "
b0 +
b0 $
b0 -
#15
b10100 "
b10100 +
b10100 !
b10100 ,
1#
b0 )
b0 0
b10100 (
b10100 /
1'
#20
0#
#25
1#
b1 )
b1 0
b11110 (
b11110 /
b11110 !
b11110 ,
b1 %
b1 .
#30
0#
#35
1#
b0 !
b0 ,
b10 %
b10 .
b11110 "
b11110 +
b1 $
b1 -
#40
0#
#45
1#
#50
0#
#55
1#
