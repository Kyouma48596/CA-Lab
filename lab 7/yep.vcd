$date
	Thu Mar 24 08:38:53 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_top_test $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module proc $end
$var wire 1 # RegWrite $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 $ regfile [31:0] $end
$var wire 32 % instr [31:0] $end
$var wire 32 & alu_res [31:0] $end
$var wire 32 ' alu_in2 [31:0] $end
$var wire 32 ( alu_in1 [31:0] $end
$var wire 1 ) Zero $end
$var wire 32 * PC_out [31:0] $end
$var wire 32 + PC_in [31:0] $end
$var wire 4 , ALUop [3:0] $end
$scope module alu $end
$var wire 4 - cntrl [3:0] $end
$var wire 1 ) Zero $end
$var wire 32 . Result [31:0] $end
$var wire 32 / B [31:0] $end
$var wire 32 0 A [31:0] $end
$var reg 32 1 res [31:0] $end
$upscope $end
$scope module contr0 $end
$var wire 1 # RegWrite $end
$var wire 4 2 funct [3:0] $end
$var wire 7 3 opcode [6:0] $end
$var wire 4 4 ALUop [3:0] $end
$upscope $end
$scope module file0 $end
$var wire 1 ! clk $end
$var wire 32 5 read_data_1 [31:0] $end
$var wire 32 6 read_data_2 [31:0] $end
$var wire 5 7 read_reg_num_1 [4:0] $end
$var wire 5 8 read_reg_num_2 [4:0] $end
$var wire 32 9 regfile_out [31:0] $end
$var wire 1 " rst $end
$var wire 1 # writeReg $end
$var wire 32 : write_data [31:0] $end
$var wire 5 ; write_reg_num [4:0] $end
$var integer 32 < i [31:0] $end
$upscope $end
$scope module mem0 $end
$var wire 1 " reset $end
$var wire 32 = instruction_code [31:0] $end
$var wire 32 > PC [31:0] $end
$upscope $end
$scope module pc0 $end
$var wire 32 ? PC_out [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 @ PC_in [31:0] $end
$var reg 32 A PC [31:0] $end
$upscope $end
$scope module pc_add0 $end
$var wire 32 B pc [31:0] $end
$var wire 32 C next [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
bx '
bx &
bx %
bx $
1#
1"
0!
$end
#1000
0)
b10 ,
b10 -
b10 4
b10 &
b10 .
b10 1
b10 :
b110011 3
b110 ;
b1 (
b1 0
b1 5
b111 7
b0 2
b1 '
b1 /
b1 6
b11100 8
b1 $
b1 9
b100 +
b100 @
b100 C
b1110000111000001100110011 %
b1110000111000001100110011 =
b0 *
b0 >
b0 ?
b0 A
b0 B
b100000 <
0"
#2000
1"
#5000
1)
b0 &
b0 .
b0 1
b0 :
b110 ,
b110 -
b110 4
b1000 2
b1000 +
b1000 @
b1000 C
b1000001110000111000001100110011 %
b1000001110000111000001100110011 =
b100 *
b100 >
b100 ?
b100 A
b100 B
b10 $
b10 9
1!
#10000
0!
#15000
0)
b1 &
b1 .
b1 1
b1 :
b0 ,
b0 -
b0 4
b111 2
b1100 +
b1100 @
b1100 C
b1110000111111001100110011 %
b1110000111111001100110011 =
b1000 *
b1000 >
b1000 ?
b1000 A
b1000 B
b0 $
b0 9
1!
#20000
0!
#25000
b1 ,
b1 -
b1 4
b110 2
b10000 +
b10000 @
b10000 C
b1110000111110001100110011 %
b1110000111110001100110011 =
b1100 *
b1100 >
b1100 ?
b1100 A
b1100 B
b1 $
b1 9
1!
#30000
0!
#35000
0)
b10 &
b10 .
b10 1
b10 :
b1001 ,
b1001 -
b1001 4
b1 2
b10100 +
b10100 @
b10100 C
b1110000111001001100110011 %
b1110000111001001100110011 =
b10000 *
b10000 >
b10000 ?
b10000 A
b10000 B
1!
#40000
0!
#45000
1)
b0 &
b0 .
b0 1
b0 :
b1010 ,
b1010 -
b1010 4
b101 2
b11000 +
b11000 @
b11000 C
b1110000111101001100110011 %
b1110000111101001100110011 =
b10100 *
b10100 >
b10100 ?
b10100 A
b10100 B
b10 $
b10 9
1!
#50000
0!
#55000
bx ,
bx -
bx 4
x)
bz &
bz .
bz 1
bz :
bx 3
bx ;
bx (
bx 0
bx 5
bx 7
bx 2
bx '
bx /
bx 6
bx 8
b11100 +
b11100 @
b11100 C
bx %
bx =
b11000 *
b11000 >
b11000 ?
b11000 A
b11000 B
b0 $
b0 9
1!
#60000
0!
#65000
b100000 +
b100000 @
b100000 C
b11100 *
b11100 >
b11100 ?
b11100 A
b11100 B
1!
#70000
0!
#75000
b100100 +
b100100 @
b100100 C
b100000 *
b100000 >
b100000 ?
b100000 A
b100000 B
1!
#80000
0!
#85000
b101000 +
b101000 @
b101000 C
b100100 *
b100100 >
b100100 ?
b100100 A
b100100 B
1!
#90000
0!
#95000
b101100 +
b101100 @
b101100 C
b101000 *
b101000 >
b101000 ?
b101000 A
b101000 B
1!
#100000
0!
#105000
b110000 +
b110000 @
b110000 C
b101100 *
b101100 >
b101100 ?
b101100 A
b101100 B
1!
#110000
0!
#115000
b110100 +
b110100 @
b110100 C
b110000 *
b110000 >
b110000 ?
b110000 A
b110000 B
1!
#120000
0!
#125000
b111000 +
b111000 @
b111000 C
b110100 *
b110100 >
b110100 ?
b110100 A
b110100 B
1!
#130000
0!
#135000
b111100 +
b111100 @
b111100 C
b111000 *
b111000 >
b111000 ?
b111000 A
b111000 B
1!
#140000
0!
#145000
b1000000 +
b1000000 @
b1000000 C
b111100 *
b111100 >
b111100 ?
b111100 A
b111100 B
1!
#150000
0!
#155000
b1000100 +
b1000100 @
b1000100 C
b1000000 *
b1000000 >
b1000000 ?
b1000000 A
b1000000 B
1!
#160000
0!
#165000
b1001000 +
b1001000 @
b1001000 C
b1000100 *
b1000100 >
b1000100 ?
b1000100 A
b1000100 B
1!
#170000
0!
#175000
b1001100 +
b1001100 @
b1001100 C
b1001000 *
b1001000 >
b1001000 ?
b1001000 A
b1001000 B
1!
#180000
0!
#185000
b1010000 +
b1010000 @
b1010000 C
b1001100 *
b1001100 >
b1001100 ?
b1001100 A
b1001100 B
1!
#190000
0!
#195000
b1010100 +
b1010100 @
b1010100 C
b1010000 *
b1010000 >
b1010000 ?
b1010000 A
b1010000 B
1!
#200000
0!
#202000
